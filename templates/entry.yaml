---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Entry Stack for the Dev.Days CNAP Workshop.  Creates an EKS cluster in a VPC with a loadbalancer-controller and a CodeBuild pipelines to buid
              a container image and push to ECR whilst integrating with the CrowdStrike image scanning engine.'

Parameters:
  # Falcon Keys
  FalconCID:
    NoEcho: true
    Description: 'Customer CID for the Falcon Installation'
    Type: String
  CrowdStrikeCloud:
    Type: String
    AllowedValues: [ 'us-1','us-2','eu-1' ]
    Default: 'us-1'
  FalconClientID:
    NoEcho: true
    Description: 'Client ID for the Falcon API'
    Type: String
  FalconClientSecret:
    NoEcho: true
    Description: 'Client Secret for the Falcon API'
    Type: String

  # Environment Vars
  EnvAlias:
    Type: String
    Default: 'cnap'
  EnvHash:
    Type: String
    Default: ''
  # AWS Account Dependencies
  S3Bucket:
    Type: String
    Default: ''
  PermissionsBoundary:
    Type: String
    Default: 'BoundaryForAdministratorAccess'
  KeyPairName:
    Type: String
    Default: cs-key
  # Shared K8S Attributes
  KubernetesVersion:
    Type: String
    AllowedValues: [ "1.21", "1.22", "1.23", "1.24" ]
    Default: "1.23"
    Description: Kubernetes control plane version.
  # Optional
  RemoteAccessCIDR:
    Type: String
    Default: 1.1.1.1/32

Resources:

  IAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/iam.yaml'
      Parameters:
        EnvAlias: !Ref EnvAlias
        EnvHash: !Ref EnvHash
        S3Bucket: !Ref S3Bucket
        PermissionsBoundary: !Ref PermissionsBoundary

  VPCStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: IAMStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/vpc.yaml'
      Parameters:
        EnvAlias: !Ref EnvAlias
        EnvHash: !Ref EnvHash
        PermissionsBoundary: !Ref PermissionsBoundary
        S3Bucket: !Ref S3Bucket
  
  EKSControlPlaneStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: IAMStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/eksControlPlane.yaml'
      Parameters:
        EnvAlias: !Ref EnvAlias
        EnvHash: !Ref EnvHash
        PermissionsBoundary: !Ref PermissionsBoundary
        BastionRole: !GetAtt IAMStack.Outputs.BastionHostRole
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        SubnetPrivate1: !GetAtt VPCStack.Outputs.SubnetPrivate1
        SubnetPrivate2: !GetAtt VPCStack.Outputs.SubnetPrivate2
        SubnetPublic1: !GetAtt VPCStack.Outputs.SubnetPublic1
        SubnetPublic2: !GetAtt VPCStack.Outputs.SubnetPublic2
        KubernetesVersion: !Ref KubernetesVersion

  PodIamRoleStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EKSControlPlaneStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/podIamRoles.yaml'
      Parameters:
        EnvAlias: !Ref EnvAlias
        EnvHash: !Ref EnvHash
        PermissionsBoundary: !Ref PermissionsBoundary
        OIDCIssuerURLWithoutProtocol: !GetAtt EKSControlPlaneStack.Outputs.OIDCIssuerURLWithoutProtocol

  # CodePipelineStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn:
  #     - IAMStack
  #     - EKSControlPlaneStack
  #     - PodIamRoleStack
  #   Properties:
  #     TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/codePipeline.yaml'
  #     Parameters:
  #       EnvAlias: !Ref EnvAlias
  #       EnvHash: !Ref EnvHash
  #       FalconClientID: !Ref FalconClientID
  #       FalconClientSecret: !Ref FalconClientSecret
  #       FalconCID: !Ref FalconCID
  #       CrowdStrikeCloud: !Ref CrowdStrikeCloud
  #       S3CodeBucketName: !Ref S3Bucket
  #       S3CodeBucketKey: code.zip
  #       EKSCodeBuildServiceRoleArn: !GetAtt IAMStack.Outputs.EKSCodeBuildServiceRoleArn
  #       EKSClusterName: !GetAtt EKSControlPlaneStack.Outputs.UniqueClusterName
  #       PodS3AccessRoleArn: !GetAtt PodIamRoleStack.Outputs.PodS3AccessRoleArn
  #       PermissionsBoundary: !Ref PermissionsBoundary
  #       WafRulesARN: !GetAtt WafRules.Outputs.WebACLARN

  EKSNodeGroupStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EKSControlPlaneStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/eksNodeGroup.yaml'
      Parameters:
        EnvAlias: !Ref EnvAlias
        EnvHash: !Ref EnvHash
        PermissionsBoundary: !Ref PermissionsBoundary
        SubnetPrivate1: !GetAtt VPCStack.Outputs.SubnetPrivate1
        SubnetPrivate2: !GetAtt VPCStack.Outputs.SubnetPrivate2
        EksClusterName: !GetAtt EKSControlPlaneStack.Outputs.UniqueClusterName
        ClusterSecurityGroupId: !GetAtt EKSControlPlaneStack.Outputs.ClusterSecurityGroupId


  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EKSNodeGroupStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/loadBalancer.yaml'
      Parameters:
        PermissionsBoundary: !Ref PermissionsBoundary
        OIDCIssuerURLWithoutProtocol: !GetAtt EKSControlPlaneStack.Outputs.OIDCIssuerURLWithoutProtocol

  BastionStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: LoadBalancerStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/bastion.yaml'
      Parameters:
        EnvAlias: !Ref EnvAlias
        EnvHash: !Ref EnvHash
        KeyPairName: !Ref KeyPairName
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        BastionRole: !GetAtt IAMStack.Outputs.BastionHostRole
        VPCID: !GetAtt VPCStack.Outputs.VpcId
        S3Bucket: !Ref S3Bucket
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.SubnetPublic1
        ControlPlaneSecurityGroupId: !GetAtt EKSControlPlaneStack.Outputs.ControlPlaneSecurityGroupId
        EnvironmentVariables: !Sub "LoadBalancerControllerIAMRoleArn=${LoadBalancerStack.Outputs.RoleArn}, VPC_ID=${VPCStack.Outputs.VpcId}, CS_ENV=${CrowdStrikeCloud}, CS_CLIENT_ID=${FalconClientID}, CS_CLIENT_SECRET=${FalconClientSecret}, K8S_CLUSTER_NAME=${EKSControlPlaneStack.Outputs.UniqueClusterName}, K8S_CA_DATA=${EKSControlPlaneStack.Outputs.CAData}, K8S_VERSION=${KubernetesVersion}, K8S_ENDPOINT=${EKSControlPlaneStack.Outputs.EKSEndpoint}"

  # KaliStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/kali.yaml'
  #     Parameters:
  #       EnvAlias: !Ref EnvAlias
  #       EnvHash: !Ref EnvHash
  #       KeyPairName: !Ref KeyPairName
  #       S3Bucket: !Ref S3Bucket
  #       VPCCIDR: !GetAtt VPCStack.Outputs.VpcCIDROut
  #       PublicSubnetCIDR: !GetAtt VPCStack.Outputs.PublicSubnet1CIDROut
  #       NATGatewayEIP: !GetAtt VPCStack.Outputs.NATGatewayEIP
  #       RemoteAccessCIDR: !Ref RemoteAccessCIDR
  #       PermissionsBoundary: !Ref PermissionsBoundary

  # ConfidentialBucket:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/vulBucket.yaml'
  #     Parameters:
  #       EnvAlias: !Ref EnvAlias
  #       EnvHash: !Ref EnvHash
  #       TemplateBucket: !Ref S3Bucket
  #       PermissionsBoundary: !Ref PermissionsBoundary
  #  FigInstall:
  #    Type: AWS::CloudFormation::Stack
  #    Properties:
  #      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/fig.template.yaml'
  #      Parameters:
  #        FalconClientId: !Ref FalconClientID
  #        FalconSecret: !Ref FalconClientSecret
  #        PermissionsBoundary: !Ref PermissionsBoundary
  #        VpcId: !GetAtt VPCStack.Outputs.VpcId
  #        PublicSubnet1: !GetAtt VPCStack.Outputs.SubnetPublic1
  #        RemoteAccessCIDR: !Ref RemoteAccessCIDR
  #        S3Bucket: !Ref S3Bucket

  # HorizonSetup:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/horizon.yaml'
  #     Parameters:
  #       EnvAlias: !Ref EnvAlias
  #       EnvHash:  !Ref EnvHash
  #       S3Bucket: !Ref S3Bucket
  #       CSCloud: !Ref CrowdStrikeCloud
  #       FalconClientId: !Ref FalconClientID
  #       FalconClientSecret: !Ref FalconClientSecret
  #       PermissionsBoundary: !Ref PermissionsBoundary

  # WafRules:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/wafACL.yaml'
